name: Build and publish a 🛢️ container

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  workflow_dispatch:

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Source checkout
        uses: actions/checkout@v4

      - name: 'Setup yq'
        uses: dcarbone/install-yq-action@v1.3.1

      - id: set-matrix
        run: echo "matrix=$(yq -o json build_versions.yaml | jq -c)" >> $GITHUB_OUTPUT

  build-X86-container:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
    needs: setup-matrix
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      - name: Build OpenVox Server ${{ matrix.release }} container
        uses: voxpupuli/gha-build-and-publish-a-container@v2
        with:
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          build_args: |
            OPENVOX_RELEASE=${{ matrix.release }}
            OPENVOXSERVER_VERSION=${{ matrix.server_version }}
            OPENVOXDB_VERSION=${{ matrix.db_version }}
            R10K_VERSION=${{ matrix.r10k_version }}
            RUGGED_VERSION=${{ matrix.rugged_version }}
          build_arch: linux/amd64
          build_context: openvoxserver
          buildfile: openvoxserver/Containerfile
          tags: |
            ghcr.io/openvoxproject/openvoxserver:${{ matrix.release }}-${{ github.sha }}-x86_64

  build-ARM-container:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: read
      packages: write
    needs: setup-matrix
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      - name: Build OpenVox Server ${{ matrix.release }} container
        uses: voxpupuli/gha-build-and-publish-a-container@v2
        with:
          registry_password: ${{ secrets.GITHUB_TOKEN }}
          build_args: |
            OPENVOX_RELEASE=${{ matrix.release }}
            OPENVOXSERVER_VERSION=${{ matrix.server_version }}
            OPENVOXDB_VERSION=${{ matrix.db_version }}
            R10K_VERSION=${{ matrix.r10k_version }}
            RUGGED_VERSION=${{ matrix.rugged_version }}
          build_arch: linux/arm64
          build_context: openvoxserver
          buildfile: openvoxserver/Containerfile
          tags: |
            ghcr.io/openvoxproject/openvoxserver:${{ matrix.release }}-${{ github.sha }}-arm64

  create-multi-arch-manifests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - setup-matrix
      - build-X86-container
      - build-ARM-container
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      - name: Log in to the ghcr.io registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version number
        id: extract_version
        uses: actions/github-script@v7
        with:
          script: |
            const agentVersion = '${{ matrix.server_version }}';
            const version = agentVersion.split('-')[0];
            core.setOutput('version', version);


      - name: Create multi arch manifests
        run: |
          docker buildx imagetools create -t ghcr.io/openvoxproject/openvoxserver:${{ steps.extract_version.outputs.version }}-${{ github.ref_name }} \
            ghcr.io/openvoxproject/openvoxserver:${{ matrix.release }}-${{ github.sha }}-arm64 \
            ghcr.io/openvoxproject/openvoxserver:${{ matrix.release }}-${{ github.sha }}-x86_64

          docker buildx imagetools create -t ghcr.io/openvoxproject/openvoxserver:${{ steps.extract_version.outputs.version }}-latest \
            ghcr.io/openvoxproject/openvoxserver:${{ matrix.release }}-${{ github.sha }}-arm64 \
            ghcr.io/openvoxproject/openvoxserver:${{ matrix.release }}-${{ github.sha }}-x86_64

          docker buildx imagetools create -t ghcr.io/openvoxproject/openvoxserver:${{ matrix.release }}-latest \
            ghcr.io/openvoxproject/openvoxserver:${{ matrix.release }}-${{ github.sha }}-arm64 \
            ghcr.io/openvoxproject/openvoxserver:${{ matrix.release }}-${{ github.sha }}-x86_64

          docker buildx imagetools create -t ghcr.io/openvoxproject/openvoxserver:${{ matrix.release }} \
            ghcr.io/openvoxproject/openvoxserver:${{ matrix.release }}-${{ github.sha }}-arm64 \
            ghcr.io/openvoxproject/openvoxserver:${{ matrix.release }}-${{ github.sha }}-x86_64

          docker buildx imagetools create -t ghcr.io/openvoxproject/openvoxserver:latest \
            ghcr.io/openvoxproject/openvoxserver:8-${{ github.sha }}-arm64 \
            ghcr.io/openvoxproject/openvoxserver:8-${{ github.sha }}-x86_64
