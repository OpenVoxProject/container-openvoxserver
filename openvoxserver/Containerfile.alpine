FROM alpine:3.22 AS base

# Install JDK
RUN apk update && apk upgrade \
    && apk add --no-cache openjdk17-jre-headless bash

################################################################################

FROM base AS build

ARG OPENVOXSERVER_VERSION=8.10.0
ARG OPENVOXDB_VERSION=8.10.0

ADD https://artifacts.voxpupuli.org/openvox-server/${OPENVOXSERVER_VERSION}/openvox-server-${OPENVOXSERVER_VERSION}.tar.gz /
ADD https://artifacts.voxpupuli.org/openvoxdb/${OPENVOXDB_VERSION}/openvoxdb-${OPENVOXDB_VERSION}.tar.gz /

ENV app_logdir=/var/log/puppetlabs
ENV apps_dir=/opt/puppetlabs/server/apps
ENV bindir=/opt/puppetlabs/server/apps/puppetserver/bin
ENV data_dir=/opt/puppetlabs/server/data
ENV etc_dir=/etc/puppetlabs
ENV rubylibdir=/opt/puppetlabs/puppet/lib/ruby/vendor_ruby
ENV run_dir=/var/run/puppetlabs
ENV symbindir=/opt/puppetlabs/server/bin
ENV uxbindir=/opt/puppetlabs/bin

RUN apk update \
&& tar -xzf /openvox-server-${OPENVOXSERVER_VERSION}.tar.gz \
&& tar -xzf /openvoxdb-${OPENVOXDB_VERSION}.tar.gz \
&& cd /puppetserver-${OPENVOXSERVER_VERSION} \
&& install -d -m 0700 "${app_logdir}/puppetserver" \
&& install -d -m 0700 "${data_dir}/puppetserver/jars" \
&& install -d -m 0700 "${data_dir}/puppetserver/yaml" \
&& install -d -m 0750 "${etc_dir}/puppetserver/ca" \
&& install -d -m 0755 "${apps_dir}/puppetserver" \
&& install -d -m 0755 "${apps_dir}/puppetserver/cli" \
&& install -d -m 0755 "${apps_dir}/puppetserver/cli/apps" \
&& install -d -m 0755 "${apps_dir}/puppetserver/config/services.d" \
&& install -d -m 0755 "${bindir}" \
&& install -d -m 0755 "${data_dir}/puppetserver/jruby-gems" \
&& install -d -m 0755 "${etc_dir}/code" \
&& install -d -m 0755 "${etc_dir}/puppetserver/conf.d" \
&& install -d -m 0755 "${etc_dir}/puppetserver/services.d" \
&& install -d -m 0755 "${run_dir}/puppetserver" \
&& install -d -m 0755 "${symbindir}" \
&& install -d -m 0755 "${uxbindir}" \
&& install -d -m 0770 "${data_dir}/puppetserver" \
&& install -d -m 0770 "${etc_dir}/puppet/ssl" \
&& install -d -m 0775 "${data_dir}" \
&& install -m 0644 ext/config/conf.d/auth.conf                "${etc_dir}/puppetserver/conf.d/auth.conf" \
&& install -m 0644 ext/config/conf.d/ca.conf                  "${etc_dir}/puppetserver/conf.d/ca.conf" \
&& install -m 0644 ext/config/conf.d/global.conf              "${etc_dir}/puppetserver/conf.d/global.conf" \
&& install -m 0644 ext/config/conf.d/metrics.conf             "${etc_dir}/puppetserver/conf.d/metrics.conf" \
&& install -m 0644 ext/config/conf.d/puppetserver.conf        "${etc_dir}/puppetserver/conf.d/puppetserver.conf" \
&& install -m 0644 ext/config/conf.d/web-routes.conf          "${etc_dir}/puppetserver/conf.d/web-routes.conf" \
&& install -m 0644 ext/config/conf.d/webserver.conf           "${etc_dir}/puppetserver/conf.d/webserver.conf" \
&& install -m 0644 ext/config/logback.xml                     "${etc_dir}/puppetserver/logback.xml" \
&& install -m 0644 ext/config/request-logging.xml             "${etc_dir}/puppetserver/request-logging.xml" \
&& install -m 0644 ext/config/services.d/ca.cfg               "${etc_dir}/puppetserver/services.d/ca.cfg" \
&& install -m 0644 ext/system-config/services.d/bootstrap.cfg "${apps_dir}/puppetserver/config/services.d/bootstrap.cfg" \
&& install -m 0644 puppet-server-release.jar                  "${apps_dir}/puppetserver" \
&& install -m 0755 ext/bin/puppetserver                       "${bindir}/puppetserver" \
&& install -m 0755 ext/cli_defaults/cli-defaults.sh           "${apps_dir}/puppetserver/cli" \
&& install -m 0755 ext/cli/ca                                 "${apps_dir}/puppetserver/cli/apps/ca" \
&& install -m 0755 ext/cli/foreground                         "${apps_dir}/puppetserver/cli/apps/foreground" \
&& install -m 0755 ext/cli/gem                                "${apps_dir}/puppetserver/cli/apps/gem" \
&& install -m 0755 ext/cli/irb                                "${apps_dir}/puppetserver/cli/apps/irb" \
&& install -m 0755 ext/cli/prune                              "${apps_dir}/puppetserver/cli/apps/prune" \
&& install -m 0755 ext/cli/ruby                               "${apps_dir}/puppetserver/cli/apps/ruby" \
&& ln -s "../apps/puppetserver/bin/puppetserver"              "${symbindir}/puppetserver" \
&& ln -s "../server/apps/puppetserver/bin/puppetserver"       "${uxbindir}/puppetserver" \
&& bash ext/build-scripts/install-vendored-gems.sh \
# puppetdb-termini
&& cd /puppetdb-${OPENVOXDB_VERSION} \
&& for f in puppet/face/node/deactivate.rb puppet/face/node/status.rb puppet/functions/puppetdb_query.rb puppet/indirector/catalog/puppetdb.rb puppet/indirector/facts/puppetdb_apply.rb puppet/indirector/facts/puppetdb.rb puppet/indirector/node/puppetdb.rb puppet/indirector/resource/puppetdb.rb puppet/reports/puppetdb.rb puppet/util/puppetdb.rb puppet/util/puppetdb/atom.rb puppet/util/puppetdb/char_encoding.rb puppet/util/puppetdb/command_names.rb puppet/util/puppetdb/command.rb puppet/util/puppetdb/config.rb puppet/util/puppetdb/http.rb; do \
         install -Dm 0644 $f "${rubylibdir}/$f"; \
     done \
&& rm -rf /openvox-server-${OPENVOXSERVER_VERSION}.tar.gz /openvoxdb-${OPENVOXDB_VERSION}.tar.gz /puppetserver-${OPENVOXSERVER_VERSION} /puppetdb-${OPENVOXDB_VERSION}

################################################################################

FROM base AS final

ARG vcs_ref
ARG build_date
ARG R10K_VERSION=5.0.0

LABEL org.label-schema.maintainer="Voxpupuli Team <voxpupuli@groups.io>" \
      org.label-schema.vendor="OpenVoxProject" \
      org.label-schema.url="https://github.com/OpenVoxProject/container-openvoxserver" \
      org.label-schema.vcs-url="https://github.com/OpenVoxProject/container-openvoxserver" \
      org.label-schema.schema-version="1.0" \
      org.label-schema.dockerfile="/Containerfile.alpine" \
      org.label-schema.name="OpenVox Server ($build_type)" \
      org.label-schema.version="$OPENVOXSERVER_VERSION" \
      org.label-schema.vcs-ref="$vcs_ref" \
      org.label-schema.build-date="$build_date"

ENV AUTOSIGN=true \
    CA_ALLOW_SUBJECT_ALT_NAMES=false \
    CA_ENABLED=true \
    CA_TTL=157680000 \
    CA_HOSTNAME=puppet \
    CA_PORT=8140 \
    CERTNAME="" \
    CSR_ATTRIBUTES='{}' \
    DEBIAN_FRONTEND=noninteractive \
    DNS_ALT_NAMES="" \
    ENVIRONMENTPATH=/etc/puppetlabs/code/environments \
    HIERACONFIG='$confdir/hiera.yaml' \
    INTERMEDIATE_CA_BUNDLE=/etc/puppetlabs/intermediate/ca.pem \
    INTERMEDIATE_CA_KEY=/etc/puppetlabs/intermediate/key.pem \
    INTERMEDIATE_CA=false \
    INTERMEDIATE_CRL_CHAIN=/etc/puppetlabs/intermediate/crl.pem \
    LOGDIR=/var/log/puppetlabs/puppetserver \
    OPENVOX_REPORTS="puppetdb" \
    OPENVOX_STORECONFIGS_BACKEND="puppetdb" \
    OPENVOX_STORECONFIGS=true \
    OPENVOXDB_SERVER_URLS=https://openvoxdb:8081 \
    OPENVOXSERVER_ENABLE_ENV_CACHE_DEL_API=true \
    OPENVOXSERVER_ENVIRONMENT_TIMEOUT=unlimited \
    OPENVOXSERVER_GRAPHITE_EXPORTER_ENABLED=false \
    OPENVOXSERVER_GRAPHITE_HOST=exporter \
    OPENVOXSERVER_GRAPHITE_PORT=9109 \
    OPENVOXSERVER_HOSTNAME="" \
    OPENVOXSERVER_JAVA_ARGS="-Xms1024m -Xmx1024m" \
    OPENVOXSERVER_MAX_ACTIVE_INSTANCES=1 \
    OPENVOXSERVER_MAX_REQUESTS_PER_INSTANCE=0 \
    OPENVOXSERVER_PORT=8140 \
    PATH=$PATH:/opt/puppetlabs/server/bin:/opt/puppetlabs/puppet/bin:/opt/puppetlabs/bin \
    SSLDIR=/etc/puppetlabs/puppet/ssl \
    USE_OPENVOXDB=true \
    ### build variables
    apps_dir=/opt/puppetlabs/server/apps \
    app_logdir=/var/log/puppetlabs \
    data_dir=/opt/puppetlabs/server/data \
    etc_dir=/etc/puppetlabs \
    run_dir=/var/run/puppetlabs \
    bindir=/opt/puppetlabs/server/apps/puppetserver/bin \
    symbindir=/opt/puppetlabs/server/bin \
    uxbindir=/opt/puppetlabs/bin

COPY --from=build /opt/puppetlabs /opt/puppetlabs
COPY --from=build /etc/puppetlabs /etc/puppetlabs
COPY --from=build /var/log/puppetlabs /var/log/puppetlabs
COPY --from=build /var/run/puppetlabs /var/run/puppetlabs

COPY container-entrypoint.sh \
     docker-entrypoint.sh \
     healthcheck.sh \
     Containerfile.alpine \
     /

COPY conf.d/product.conf /etc/puppetlabs/puppetserver/conf.d/
COPY conf.d/puppetserver.conf /etc/puppetlabs/puppetserver/conf.d/
COPY container-entrypoint.d /container-entrypoint.d
COPY logback.xml /etc/puppetlabs/puppetserver/
COPY puppetdb.conf /var/tmp/puppet/
COPY puppetserver /etc/default/puppetserver
COPY request-logging.xml /etc/puppetlabs/puppetserver/

RUN apk update \
&& apk add --no-cache dumb-init alpine-sdk openssh-client openssl libssh2 ruby ruby-dev \
&& gem install --no-document openvox:8.21.1 syslog hocon:1.4.0 racc:1.8.1 r10k:${R10K_VERSION} hiera-eyaml:4.3.0 openvoxserver-ca:3.0.0 \
&& apk del --purge alpine-sdk \
&& addgroup -g 1001 puppet \
&& adduser -G puppet -u 1001 -h ${data_dir}/puppetserver -H -D -s /sbin/nologin puppet \
&& chown -R puppet:puppet ${etc_dir}/code \
&& chown -R puppet:puppet ${etc_dir}/puppet/ssl \
&& chown -R puppet:puppet ${etc_dir}/puppetserver/ca \
&& chown -R puppet:puppet ${app_logdir}/puppetserver \
&& chown -R puppet:puppet ${run_dir}/puppetserver \
&& chown -R puppet:puppet ${data_dir}/puppetserver \
&& chmod 700 ${app_logdir}/puppetserver \
&& chmod 770 ${data_dir}/puppetserver \
&& chmod 750 ${etc_dir}/puppetserver \
&& chmod 700 ${data_dir}/puppetserver/jars \
&& chmod 700 ${data_dir}/puppetserver/yaml \
&& find /etc/puppetlabs/puppet/ssl -type d -print0 | xargs -0 chmod 770 \
&& echo 'alias ll="ls -la --color=auto"' >> ~/.bashrc \
&& chmod +x /container-entrypoint.sh /docker-entrypoint.sh /healthcheck.sh /container-entrypoint.d/*.sh \
&& mkdir -p /opt/puppetlabs/puppet/bin \
&& ln -s /usr/bin/puppet /opt/puppetlabs/puppet/bin/puppet \
&& ln -s /usr/bin/facter /opt/puppetlabs/puppet/bin/facter \
&& ln -s /usr/bin/ruby /opt/puppetlabs/puppet/bin/ruby \
&& ln -s /usr/bin/gem /opt/puppetlabs/puppet/bin/gem \
&& ln -s /usr/bin/irb /opt/puppetlabs/puppet/bin/irb \
&& ln -s /usr/bin/erb /opt/puppetlabs/puppet/bin/erb \
&& ln -s /usr/bin/r10k /opt/puppetlabs/puppet/bin/r10k \
&& ln -s /usr/bin/hiera-eyaml /opt/puppetlabs/puppet/bin/hiera-eyaml \
# install puppet gem as library into jruby loadpath
&& puppetserver gem install --no-document openvox

# k8s uses livenessProbe, startupProbe, readinessProbe and ignores HEALTHCHECK
HEALTHCHECK --interval=20s --timeout=15s --retries=12 --start-period=3m CMD ["/healthcheck.sh"]

EXPOSE 8140

ENTRYPOINT ["dumb-init", "/container-entrypoint.sh"]
CMD ["foreground"]
